version: 2.1

workflows:
  build:
    jobs:
      - linux-arm64-glibc-node-14:
          filters:
            tags:
              only: /^v.*/
      - linux-arm64-musl-node-14:
          filters:
            tags:
              only: /^v.*/
      - linux-arm64-glibc-node-18:
          filters:
            tags:
              only: /^v.*/
      - linux-arm64-musl-node-18:
          filters:
            tags:
              only: /^v.*/

jobs:
  linux-arm64-glibc-node-14:
    resource_class: arm.medium
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - run: |
          sudo docker run -dit --name sharp --volume "${PWD}:/mnt/sharp" --workdir /mnt/sharp arm64v8/debian:bullseye
          sudo docker exec sharp sh -c "apt-get update && apt-get install -y build-essential git python3 curl fonts-noto-core"
          sudo docker exec sharp sh -c "curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -"
          sudo docker exec sharp sh -c "echo 'deb https://deb.nodesource.com/node_14.x sid main' >/etc/apt/sources.list.d/nodesource.list"
          sudo docker exec sharp sh -c "apt-get update && apt-get install -y nodejs"
      - run: sudo docker exec sharp sh -c "npm install --build-from-source --unsafe-perm"
      - run: sudo docker exec sharp sh -c "npm test"
      - run: "[[ -n $CIRCLE_TAG ]] && sudo docker exec --env prebuild_upload sharp sh -c \"npx prebuild --runtime napi --target 7 --upload=$prebuild_upload\" || true"
  linux-arm64-glibc-node-18:
    resource_class: arm.medium
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - run: |
          sudo docker run -dit --name sharp --workdir /mnt/sharp arm64v8/debian:bullseye
          sudo docker exec sharp sh -c "apt-get update && apt-get install -y build-essential git python3 curl fonts-noto-core"
          sudo docker exec sharp sh -c "curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -"
          sudo docker exec sharp sh -c "echo 'deb https://deb.nodesource.com/node_18.x sid main' >/etc/apt/sources.list.d/nodesource.list"
          sudo docker exec sharp sh -c "apt-get update && apt-get install -y nodejs"
          sudo docker exec sharp sh -c "mkdir -p /mnt/sharp"
          sudo docker cp . sharp:/mnt/sharp/.
      - run: sudo docker exec sharp sh -c "npm install --build-from-source"
      - run: sudo docker exec sharp sh -c "npm test"
  linux-arm64-musl-node-14:
    resource_class: arm.medium
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - run: |
          sudo docker run -dit --name sharp --volume "${PWD}:/mnt/sharp" --workdir /mnt/sharp node:14-alpine3.12
          sudo docker exec sharp sh -c "apk add build-base git python3 font-noto --update-cache"
      - run: sudo docker exec sharp sh -c "npm install --build-from-source --unsafe-perm"
      - run: sudo docker exec sharp sh -c "npm test"
      - run: "[[ -n $CIRCLE_TAG ]] && sudo docker exec --env prebuild_upload sharp sh -c \"npx prebuild --runtime napi --target 7 --upload=$prebuild_upload\" || true"
  linux-arm64-musl-node-18:
    resource_class: arm.medium
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - run: |
          sudo docker run -dit --name sharp --workdir /mnt/sharp node:18-alpine3.14
          sudo docker exec sharp sh -c "apk add build-base git python3 font-noto --update-cache"
          sudo docker exec sharp sh -c "mkdir -p /mnt/sharp"
          sudo docker cp . sharp:/mnt/sharp/.
      - run: sudo docker exec sharp sh -c "npm install --build-from-source"
      - run: sudo docker exec sharp sh -c "npm test"
